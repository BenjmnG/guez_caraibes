main[data-type="projets"]{

	$t: .25s;

	/* */
	/* Generals rules */

	border-bottom: 1px solid var(--cB);
	margin-bottom: $baseline;

	&, #map, {
		width: 100%;
	}

	.map_container, .map_container svg{
		height: 100%;
		width: 100%;
	}

	#map{
		
		box-sizing: border-box;
		z-index:  1;

		.map_container{
			overflow: hidden;
			background: $c1a;
		}

		#cursor{
			transition: .25s ease;
		}
	}

	> h1{
		@include f1(2);
		text-transform: uppercase;
		z-index: 6;
		user-select: none;
	}

	#filter{
		background: var(--cW);
		width: 100%;
		z-index: 6;

		label{
			cursor: pointer;
			width: 100%;
			display: block;
		}

		> ul{
			@include f1(1);
			text-transform: uppercase;

			> li > label{
				font-weight: $bold;
				cursor: pointer;
				display: flex;
				gap: $u*.5;

				span:first-child{flex-shrink: 0;}

				.value{
					flex-shrink: 2;
					overflow: hidden;
					text-overflow: ellipsis;
					font-weight: normal;
					opacity: 1;
					transition: .25s ease-in-out;
					max-height: $baseline;
					white-space: nowrap;
					&:empty{
						//@include icon_valid;
						transition: 0s ease-in-out;
					}
				}		
			}

			ul > li{
				label{
					@include icon_valid;
					padding-left: calc( #{$u} * ( var(--sc) * .75 ) );
				}
			}
		}
	}

	ul.list.projets{
		background: var(--cW);

		overflow: hidden auto;
		scrollbar-width: none;

		z-index: 2;
		box-sizing: border-box;

		::-webkit-scrollbar {
		  display: none;
		}

		&.empty{
			&:before{
				content: "⦰\A Aucun projets ne correspond à votre recherche";
				white-space: pre; 
				@include f1(1);
				position: absolute;
				text-align: center;
				left: 50%;
				transform: translateX(-50%) translateY(-50%)
			}
		}

		li{

			cursor: pointer;

			.cover{
				background: $c3a;

				aspect-ratio: 3/2;
				width: 100%;
				//max-height: max(10rem, 20vh);
				border-bottom: 1px solid currentColor;

				/* 				
				&.temporary{
					background: var(--cR);
					picture{
						filter: grayscale(1);
						mix-blend-mode: screen;
					}

					picture + figure{
						display: none;
					}
				} */

				figure, picture, img{
					width: 100%;
					height: 100%;
				}

				picture{
					position: absolute;
					z-index: 2;
				}

				img{
					object-fit: cover;
				}

				.sample{
					z-index: 0;
					position: absolute;
					top: 0;
					left: 0;
				}
				svg{
					width: 25%;
					left: 50%;
					top: 50%;
					transform: translateX(-50%) translateY(-50%);
					color: var(--cB);
				}
			}

			&:nth-of-type(4n-1) .cover:not(.temporary){
				background: $c2a;
			}
			&:nth-of-type(4n-2) .cover:not(.temporary){
				background: $c4a;
			}

			ul.details{
				li{
					padding: $base*2;
					border-bottom: 1px solid currentColor;
					@include f1(1);
					padding-left: calc(max($u*7, 33.3%));

					em{
						display: block;
					}
					&:before{
						position: absolute;
						content: attr(aria-label)"\00a0";
						top: 1em;
						left: 0;//$u*.5;
						@include f1(0);
					}

					&:empty{display: none;}
				}
			}
		}
	}

	
	input[name="open_filter"]:not(:checked) ~ #filter .value{

	}

	/* */
	/* Responsive */ 

	@include for-size(phone){


		&, #map{
			height: calc(100vh - #{$base* 35});
			height: calc(100dvh - #{$base* 35});
		}

		> h1{
			background: var(--cW);
			padding: $base*4 0;
		}

		#filter{
			position: absolute;
			bottom: -$baseline;
			transition: padding $t ease-in-out;
			border-top: 1px solid currentColor;
			max-height: calc(100vh - #{$baseline*5});

			&:before{
				content: "";
				width: 100vw;
				left: -$u;
				height: $baseline*2;
				background: linear-gradient(transparent, var(--cB));
				opacity: .15;
				top: $baseline*-2;
				position: absolute;
			}

			>ul{
				z-index: 2;
				background: var(--cW);
				padding: 0;
				transition: padding $t ease-in-out;

				> li{
					padding: $base 0;

					&:not(:last-child){
						border-bottom: 1px solid currentColor;
					}


				}
				ul{
	 				overflow: hidden;
	 				max-height: 0;
	 				padding: 0;
	 				padding: 0;
					transition: max-height $t ease-in-out,
											padding $t ease-in-out;

					li{
						padding-bottom: $base;
					}
				}
			}

			#closeAllFilters{
				background: var(--cW);
				width: $u*6;
				height: $base*8;
				position: absolute;
				top: 0;
				left: 50%;
				transform: translateY(0%) translateX(-50%);
				border-radius: $u $u 0 0;
				color: var(--cB);
				border: 1px solid currentColor;
				cursor: pointer;
				transition: transform .25s 0s ease-in-out;


				&:before{
  				content: "\00d7";
  				content: "Fermer";
  				text-transform: uppercase;
  				@include f1(0)					
				}

				&:hover{
					background: var(--cB);
					&:before{color: var(--cW)} 
				}
			}
			#closeProject{display: none;}
		}

		input[name="open_filter"]:checked ~ #filter{
			
			> ul{
				padding: $base*2 0;
			}
			
			#closeAllFilters{
				transform: translateY(-100%) translateX(-50%);
				transition-delay: .2s 
			}

		}
		
		input#filter_by_ty:checked ~ #filter > ul > li:nth-of-type(1),
		input#filter_by_sf:checked ~ #filter > ul > li:nth-of-type(2),
		input#filter_by_lo:checked ~ #filter > ul > li:nth-of-type(3){
			ul{
				padding: $base*2 0;
				max-height: 50vh;
				overflow-y: auto;
			}
		}

		ul.list.projets{
			height: calc(100% - #{$base*12});
			padding-bottom: $baseline*10;
			box-sizing: border-box;

			width: calc(100% + #{$u*2});
			padding: 0 $u 25vh $u;
			left: -$u;

			&.empty:before{ top: 25%; }

			.cover{
				margin-bottom: $base*4;
			}

			h1{
				@include f1(2, -2, $bold);
				margin-bottom: $base*2;
			}

			> li{
				margin-bottom: $baseline*1.5;
				border-top: 1px solid currentColor;
				ul.details li:last-child{border-bottom: none;}
			}
		}

		#map{
			position: absolute;
		}
	}

	@include for-size(desktop){
		display: grid;
		grid-template-columns: repeat(6, 1fr);
		grid-template-rows: auto 1fr;
		grid-gap: 0 $u;
		justify-items: end;


		&, #map, {
			width: 100%;
			height: calc(100vh - #{$tbHeight} - #{$baseline});
			height: calc(100dvh - #{$tbHeight} - #{$base*6});
		}

		.map_container, .map_container svg{
			height: 100%;
			width: 100%;
		}

		.map_container svg{
			min-width: calc(100vh - #{$tbHeight} - #{$baseline});
			min-width: calc(100dvh - #{$tbHeight} - #{$base*6});
		}

		> h1{
			grid-column: 1 / 4;
			grid-row: 1;
			padding: $base 0 0 $u; 
			transition: padding $t ease-in-out;
			justify-self: start;

			&:before{
				content: "";
				position: absolute;
				top: .4em;
    		left: .25em;
				width: 100%;
				height: $baseline;
				background: rgb(207, 236, 251);;
				border-radius: 1em;
				filter: blur(.2em);
				z-index: -1;

			}
		}

		#filter{
			grid-row: 1;
			width: 100%;
			height: auto;
			padding: 0;
			transition: padding $t ease-in-out,
									width $t ease-in-out;

			#closeAllFilters{display: none;}

			> ul{
				display: grid;
				grid-template-columns: repeat(6, 1fr);
				grid-gap: $baseline $u;
				align-items: start;
				padding: $base*2 $u;
				opacity: 1;
				transition: opacity .25s ease-in-out;
				z-index: 1;

				> li{
					grid-column: span 2;
				}
	
				ul{
	 				overflow: hidden;
	 				max-height: 0;
					transition: max-height $t ease-in-out,
											padding $t ease-in-out;
				}

			}

			#closeProject{
				background: none;
				opacity: 0;
				top: $base*2;
				position: absolute;
				cursor: pointer;
				left: 1rem;
				transition: opacity .25s ease-in-out;
				@include f1(1);
				z-index: -1;

				.close{
					display: inline-block;
				}
				.back{
					display: none;
				}

				svg{
					height: 1em;
					width: 1em;
					top: $base;
					padding-right: $u*.5;
				}
			}
		}

		&.init{
			input[name="open_filter"]:checked ~ h1{
				padding-top: $base*4;
			}
		}

		input[name="open_filter"]:checked ~,
		&.init{
			#filter .value:not(:empty){
				opacity: 0;
				transition: none;
			}
		} 


		#map{
			grid-row: 1 / 4;
			overflow-x: visible;

			.map_container{
				width: calc(100vw - #{$u*3} - 2px);
				width: calc(100vw - #{$u*2.7});
			}
		}

		ul.list.projets{
			grid-row: 2;
			padding: $base*2 $u;

			display: grid;
			grid-template-columns: repeat(6, 1fr);
			grid-gap: $u;

			width: 100%;
			border-top: 1px solid white;

			transition: transform .25s ease-in-out,
									width .25s ease-in-out,
									border .5s ease-in,
									padding .5s ease-in;
			transform: translateX(calc(100% + #{$u*2}));

			&.empty:before{ top: 45%; }

			> li{
				grid-column: span 3;
			}

			.cover{
				margin-bottom: $baseline;
			}


			h1{
				@include f1(2, -2, $bold);
				margin-bottom: $base*4
			}

			header{
				margin-bottom: $base*4;
			}
		}

		&[data-vue="single"]{
			ul.list.projets> li:not([data-active="true"]){
				display: none;
			}
			ul.list.projets> li[data-active="true"]{
				grid-column: span 6;
			}

			#filter{
				> ul{
					opacity: 0;
					z-index: -1;
				}

				#closeProject{
					opacity: 1;
					z-index: 1;
				}
			}
		}

		&[data-vue="single"] ul.list.projets,
		input[id^="f-"]:checked ~ ul.list.projets{
			transform: translateX(0%) !important;
		}

		input[id^="f-"]:checked ~ #filter{
			#closeProject{
				span.close{  display: none;}
				span.back{ display: inline-block;}
			}
		}


		&[data-vue="single"] ul.list.projets [data-active="true"]{
			display: block;
		}

		&[data-vue="single"] ul.list.projets.empty::before{
			content: "";
		}

		&[data-vue="single"]{
			#filter, ul.list.projets{width: calc((100% - #{$u*3}) / 4 * 3)}
		}

		#filter, ul.list.projets{grid-column: 3 / span 4;}
		#map{grid-column: 1 / span 4;}
	}

	@include for-size(desktop-1200){
		#filter, ul.list.projets{grid-column: 4 / span 3;}
		#map{grid-column: 1 / span 4;}

		&[data-vue="single"]{
			#filter, ul.list.projets{width: calc((100% - #{$u*2}) / 3 * 2)}
		}
	}

	@include for-size(desktop-1800){
		ul.list.projets{
			h1{
				@include f1(3, -2, $bold);
				margin-bottom: $base*6
			}
		}

	}
	
	@mixin deployFilter(){
		padding: $base*4 0;
		&:before{height: 100%;}
		> ul ul{
				max-height: $baseline*15;
				padding-top: $base*4;
		} 
	}
	
		/* 
		// Think is useless
		@media (pointer: fine) and (min-width: 900px) {
			&:not([data-vue="single"]) input[name="open_filter"]:checked ~ #filter:hover{
				@include deployFilter();
			}
		}
 		*/
 	
		@media (min-width: 900px){
			&:not([data-vue="single"]) input[name="open_filter"]:checked ~ #filter,
			&.init:not([data-vue="single"]) #filter{
				@include deployFilter();
			}
			
			&:not([data-vue="single"]) input[name="open_filter"]:checked ~ ul.list.projets{
				border-top-color: currentColor;
				padding-top: $base*6; 
			}

		}


	@media (max-height: 800px) and (min-width: 900px) and (max-width: 1400px){
		#filter, ul.list.projets{grid-column: 4/span 3;}
		
		ul.list.projets{
			> li{
				grid-column: span 6;

				.cover{
					height: 33vh;
				}

				header{
					padding-left: $u*.5;
					position: absolute;
					top: 33vh;
					left: 0;
					z-index: 5;
					transform: translateY(-100%);
					//text-shadow: -1px 1px 7px #fff;
					background: var(--cW);
					padding: $base $u*.5 $base 0;
					border-top: 1px solid currentColor;
					max-width: 75%;

					h1{
						@include f1(2,0, $bold);
						margin: 0;
					}
				}
			}
		}
	}

}

.noJS main[data-type="projets"] #filter {
	// Avoid staking overflow if all filter deploy
	overflow-x: hidden;
	overflow-y: auto;
	// This button is useless without JS
	#closeAllFilters{display: none;}
}