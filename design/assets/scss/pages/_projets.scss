body[data-serve="projets"]{

}
main[data-type="projets"]{

	$t: .25s;

	border-bottom: 1px solid var(--cB);
	margin-bottom: $baseline;

	&, #map, .map_container, .map_container svg{
		width: 100%;
		height: calc(100vh - #{$tbHeight} - #{$baseline});
		height: calc(100dvh - #{$tbHeight} - #{$baseline});
	}

	#map{
		background: $c1a;
		position: absolute;
		top: 0;
		left: 0;
		box-sizing: border-box;
		z-index: -1;

		.map_container{
			overflow: hidden;
		}
	}

	> h1{
		@include f1(2);
		text-transform: uppercase;
		z-index: 2;
	}

	#filter{
		background: var(--cW);
		width: 100%;
		

		label{
			cursor: pointer;
		}

		> ul{
			@include f1(1);
			text-transform: uppercase;

			> li > label{
				display: block;
				font-weight: $bold;
				width: 100%;
				cursor: pointer;
				.value{
					position: absolute;
					right: 0;
					top: 50%;
					transform: translateY(-50%);
					&:empty{@include icon_valid;}
				}		
			}

			ul > li{
				width: 100%;
				label{
					@include icon_valid;
				}
			}
		}
	}

	input#filter_by_typo:not(:checked) ~ input[name="filter-typo"]:checked ~ #filter > ul > li:nth-of-type(1) > label .value:empty,
	input#filter_by_sf:not(:checked) ~ input[name="filter-sf"]:checked ~ #filter > ul > li:nth-of-type(2) > label .value:empty,
	input#filter_by_local:not(:checked) ~ input[name="filter-local"]:checked ~ #filter > ul > li:nth-of-type(3) > label .value:empty{
		--sc: 1;
	}

	@for $i from 1 through 8 { 
		#filter-typo_#{$i}:checked ~ #filter label[for="filter-typo_#{$i}"]{
			--sc: 1;
		}
	}
	@for $i from 1 through 6 { 
		#filter-sf_#{$i}:checked ~ #filter label[for="filter-sf_#{$i}"]{
			--sc: 1;
		}
	}
	@for $i from 1 through 3 { 
		#filter-local_#{$i}:checked ~ #filter  label[for="filter-local_#{$i}"]{
			--sc: 1;
		}
	}

	@include for-size(phone){

		#filter{
			position: absolute;
			bottom: 0;
			padding: 0;
			transition: padding $t ease-in-out;
			border-top: 1px solid currentColor;

			>ul{
				> li{
					padding: $base 0;

					&:not(:last-child){
						border-bottom: 1px solid currentColor;
					}
				}
				ul{
	 				overflow: hidden;
	 				max-height: 0;
	 				padding: 0;
					transition: max-height $t ease-in-out,
											padding $t ease-in-out;

					li{
						padding-bottom: $base;
					}
				}
			}
		}

		input[name="open_filter"]:checked ~ #filter{
			padding: $base*2 0;
			> ul ul{
			}

		}
		
		input#filter_by_typo:checked ~ #filter > ul > li:nth-of-type(1),
		input#filter_by_sf:checked ~ #filter > ul > li:nth-of-type(2),
		input#filter_by_local:checked ~ #filter > ul > li:nth-of-type(3){
			ul{
				padding: $base*2 0;
				max-height: 50vh;
			}
		}
	}
	@include for-size(desktop){
		display: grid;
		grid-template-columns: repeat(6, 1fr);
		grid-template-rows: auto 1fr;
		grid-gap: $baseline $u;

		> h1{
			grid-column: 1 / 3;
			grid-row: 1;
			padding: $base 0 0 $u; 
			transition: padding $t ease-in-out;
		}

		#filter{
			grid-column: 3 / span 4;
			grid-row: 1;
			height: auto;
			padding: 0;
			transition: padding $t ease-in-out;
			transition: padding $t ease-in-out;

			&:before{
				content: "";
				position: absolute;
				left: calc(-100% - #{$u});
				top: 0;
				width: calc(100vw - #{$u*3});
				height: 0;
				background: white;
			}

			> ul{
				display: grid;
				grid-template-columns: repeat(6, 1fr);
				grid-gap: $baseline $u;
				align-items: start;
				padding: $base*2 $u;

				> li{
					grid-column: span 2;
				}
	
				ul{
	 				overflow: hidden;
	 				max-height: 0;
					transition: max-height $t ease-in-out,
											padding $t ease-in-out;
				}

			}
		}

		input[name="open_filter"]:checked {
			~ h1{
				padding-top: $base*4;
			}
			~ #filter{
				padding: $base*4 0;
				&:before{
					height: 100%;
				}
				> ul ul{
						max-height: $baseline*10;
						padding-top: $base*4;

				} 
			}
		}
	}

	ul.list{
		grid-column: 3 / span 4;
		grid-row: 2; 
	}
	@include for-size(desktop-1800){
		> h1{
			grid-column: 1 / 4;
		}
		#filter{
			grid-column: 4 / span 3;
		}

		ul.list{
			grid-column: 4 / span 3;
		}
	}
}

